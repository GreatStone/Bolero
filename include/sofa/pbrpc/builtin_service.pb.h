// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sofa/pbrpc/builtin_service.proto

#ifndef PROTOBUF_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto__INCLUDED
#define PROTOBUF_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/descriptor.pb.h"
#include "sofa/pbrpc/rpc_option.pb.h"
// @@protoc_insertion_point(includes)

namespace sofa {
namespace pbrpc {
namespace builtin {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

class HealthRequest;
class HealthResponse;
class ServerOptions;
class ServerOptionsRequest;
class ServerOptionsResponse;
class UpdateOptionsRequest;
class UpdateOptionsResponse;
class ServerStatusRequest;
class ServerStatusResponse;
class ListServiceRequest;
class ListServiceResponse;
class MethodStat;
class ServiceStat;
class StatRequest;
class StatResponse;

// ===================================================================

class HealthRequest : public ::google::protobuf::Message {
 public:
  HealthRequest();
  virtual ~HealthRequest();

  HealthRequest(const HealthRequest& from);

  inline HealthRequest& operator=(const HealthRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HealthRequest& default_instance();

  void Swap(HealthRequest* other);

  // implements Message ----------------------------------------------

  HealthRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HealthRequest& from);
  void MergeFrom(const HealthRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.HealthRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static HealthRequest* default_instance_;
};
// -------------------------------------------------------------------

class HealthResponse : public ::google::protobuf::Message {
 public:
  HealthResponse();
  virtual ~HealthResponse();

  HealthResponse(const HealthResponse& from);

  inline HealthResponse& operator=(const HealthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HealthResponse& default_instance();

  void Swap(HealthResponse* other);

  // implements Message ----------------------------------------------

  HealthResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HealthResponse& from);
  void MergeFrom(const HealthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string health = 1;
  inline bool has_health() const;
  inline void clear_health();
  static const int kHealthFieldNumber = 1;
  inline const ::std::string& health() const;
  inline void set_health(const ::std::string& value);
  inline void set_health(const char* value);
  inline void set_health(const char* value, size_t size);
  inline ::std::string* mutable_health();
  inline ::std::string* release_health();
  inline void set_allocated_health(::std::string* health);

  // optional string version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  inline void set_allocated_version(::std::string* version);

  // optional string start_time = 3;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  inline ::std::string* release_start_time();
  inline void set_allocated_start_time(::std::string* start_time);

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.HealthResponse)
 private:
  inline void set_has_health();
  inline void clear_has_health();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_start_time();
  inline void clear_has_start_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* health_;
  ::std::string* version_;
  ::std::string* start_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static HealthResponse* default_instance_;
};
// -------------------------------------------------------------------

class ServerOptions : public ::google::protobuf::Message {
 public:
  ServerOptions();
  virtual ~ServerOptions();

  ServerOptions(const ServerOptions& from);

  inline ServerOptions& operator=(const ServerOptions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerOptions& default_instance();

  void Swap(ServerOptions* other);

  // implements Message ----------------------------------------------

  ServerOptions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerOptions& from);
  void MergeFrom(const ServerOptions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 work_thread_num = 1;
  inline bool has_work_thread_num() const;
  inline void clear_work_thread_num();
  static const int kWorkThreadNumFieldNumber = 1;
  inline ::google::protobuf::int64 work_thread_num() const;
  inline void set_work_thread_num(::google::protobuf::int64 value);

  // optional int64 keep_alive_time = 2;
  inline bool has_keep_alive_time() const;
  inline void clear_keep_alive_time();
  static const int kKeepAliveTimeFieldNumber = 2;
  inline ::google::protobuf::int64 keep_alive_time() const;
  inline void set_keep_alive_time(::google::protobuf::int64 value);

  // optional int64 max_pending_buffer_size = 3;
  inline bool has_max_pending_buffer_size() const;
  inline void clear_max_pending_buffer_size();
  static const int kMaxPendingBufferSizeFieldNumber = 3;
  inline ::google::protobuf::int64 max_pending_buffer_size() const;
  inline void set_max_pending_buffer_size(::google::protobuf::int64 value);

  // optional int64 max_throughput_in = 4;
  inline bool has_max_throughput_in() const;
  inline void clear_max_throughput_in();
  static const int kMaxThroughputInFieldNumber = 4;
  inline ::google::protobuf::int64 max_throughput_in() const;
  inline void set_max_throughput_in(::google::protobuf::int64 value);

  // optional int64 max_throughput_out = 5;
  inline bool has_max_throughput_out() const;
  inline void clear_max_throughput_out();
  static const int kMaxThroughputOutFieldNumber = 5;
  inline ::google::protobuf::int64 max_throughput_out() const;
  inline void set_max_throughput_out(::google::protobuf::int64 value);

  // optional bool disable_builtin_services = 6;
  inline bool has_disable_builtin_services() const;
  inline void clear_disable_builtin_services();
  static const int kDisableBuiltinServicesFieldNumber = 6;
  inline bool disable_builtin_services() const;
  inline void set_disable_builtin_services(bool value);

  // optional bool disable_list_service = 7;
  inline bool has_disable_list_service() const;
  inline void clear_disable_list_service();
  static const int kDisableListServiceFieldNumber = 7;
  inline bool disable_list_service() const;
  inline void set_disable_list_service(bool value);

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.ServerOptions)
 private:
  inline void set_has_work_thread_num();
  inline void clear_has_work_thread_num();
  inline void set_has_keep_alive_time();
  inline void clear_has_keep_alive_time();
  inline void set_has_max_pending_buffer_size();
  inline void clear_has_max_pending_buffer_size();
  inline void set_has_max_throughput_in();
  inline void clear_has_max_throughput_in();
  inline void set_has_max_throughput_out();
  inline void clear_has_max_throughput_out();
  inline void set_has_disable_builtin_services();
  inline void clear_has_disable_builtin_services();
  inline void set_has_disable_list_service();
  inline void clear_has_disable_list_service();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 work_thread_num_;
  ::google::protobuf::int64 keep_alive_time_;
  ::google::protobuf::int64 max_pending_buffer_size_;
  ::google::protobuf::int64 max_throughput_in_;
  ::google::protobuf::int64 max_throughput_out_;
  bool disable_builtin_services_;
  bool disable_list_service_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ServerOptions* default_instance_;
};
// -------------------------------------------------------------------

class ServerOptionsRequest : public ::google::protobuf::Message {
 public:
  ServerOptionsRequest();
  virtual ~ServerOptionsRequest();

  ServerOptionsRequest(const ServerOptionsRequest& from);

  inline ServerOptionsRequest& operator=(const ServerOptionsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerOptionsRequest& default_instance();

  void Swap(ServerOptionsRequest* other);

  // implements Message ----------------------------------------------

  ServerOptionsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerOptionsRequest& from);
  void MergeFrom(const ServerOptionsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.ServerOptionsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ServerOptionsRequest* default_instance_;
};
// -------------------------------------------------------------------

class ServerOptionsResponse : public ::google::protobuf::Message {
 public:
  ServerOptionsResponse();
  virtual ~ServerOptionsResponse();

  ServerOptionsResponse(const ServerOptionsResponse& from);

  inline ServerOptionsResponse& operator=(const ServerOptionsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerOptionsResponse& default_instance();

  void Swap(ServerOptionsResponse* other);

  // implements Message ----------------------------------------------

  ServerOptionsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerOptionsResponse& from);
  void MergeFrom(const ServerOptionsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .sofa.pbrpc.builtin.ServerOptions options = 1;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 1;
  inline const ::sofa::pbrpc::builtin::ServerOptions& options() const;
  inline ::sofa::pbrpc::builtin::ServerOptions* mutable_options();
  inline ::sofa::pbrpc::builtin::ServerOptions* release_options();
  inline void set_allocated_options(::sofa::pbrpc::builtin::ServerOptions* options);

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.ServerOptionsResponse)
 private:
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::sofa::pbrpc::builtin::ServerOptions* options_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ServerOptionsResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateOptionsRequest : public ::google::protobuf::Message {
 public:
  UpdateOptionsRequest();
  virtual ~UpdateOptionsRequest();

  UpdateOptionsRequest(const UpdateOptionsRequest& from);

  inline UpdateOptionsRequest& operator=(const UpdateOptionsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateOptionsRequest& default_instance();

  void Swap(UpdateOptionsRequest* other);

  // implements Message ----------------------------------------------

  UpdateOptionsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateOptionsRequest& from);
  void MergeFrom(const UpdateOptionsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .sofa.pbrpc.builtin.ServerOptions options = 1;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 1;
  inline const ::sofa::pbrpc::builtin::ServerOptions& options() const;
  inline ::sofa::pbrpc::builtin::ServerOptions* mutable_options();
  inline ::sofa::pbrpc::builtin::ServerOptions* release_options();
  inline void set_allocated_options(::sofa::pbrpc::builtin::ServerOptions* options);

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.UpdateOptionsRequest)
 private:
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::sofa::pbrpc::builtin::ServerOptions* options_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateOptionsRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateOptionsResponse : public ::google::protobuf::Message {
 public:
  UpdateOptionsResponse();
  virtual ~UpdateOptionsResponse();

  UpdateOptionsResponse(const UpdateOptionsResponse& from);

  inline UpdateOptionsResponse& operator=(const UpdateOptionsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateOptionsResponse& default_instance();

  void Swap(UpdateOptionsResponse* other);

  // implements Message ----------------------------------------------

  UpdateOptionsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateOptionsResponse& from);
  void MergeFrom(const UpdateOptionsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .sofa.pbrpc.builtin.ServerOptions options = 1;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 1;
  inline const ::sofa::pbrpc::builtin::ServerOptions& options() const;
  inline ::sofa::pbrpc::builtin::ServerOptions* mutable_options();
  inline ::sofa::pbrpc::builtin::ServerOptions* release_options();
  inline void set_allocated_options(::sofa::pbrpc::builtin::ServerOptions* options);

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.UpdateOptionsResponse)
 private:
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::sofa::pbrpc::builtin::ServerOptions* options_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateOptionsResponse* default_instance_;
};
// -------------------------------------------------------------------

class ServerStatusRequest : public ::google::protobuf::Message {
 public:
  ServerStatusRequest();
  virtual ~ServerStatusRequest();

  ServerStatusRequest(const ServerStatusRequest& from);

  inline ServerStatusRequest& operator=(const ServerStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStatusRequest& default_instance();

  void Swap(ServerStatusRequest* other);

  // implements Message ----------------------------------------------

  ServerStatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStatusRequest& from);
  void MergeFrom(const ServerStatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.ServerStatusRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ServerStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class ServerStatusResponse : public ::google::protobuf::Message {
 public:
  ServerStatusResponse();
  virtual ~ServerStatusResponse();

  ServerStatusResponse(const ServerStatusResponse& from);

  inline ServerStatusResponse& operator=(const ServerStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerStatusResponse& default_instance();

  void Swap(ServerStatusResponse* other);

  // implements Message ----------------------------------------------

  ServerStatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerStatusResponse& from);
  void MergeFrom(const ServerStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_listening = 1;
  inline bool has_is_listening() const;
  inline void clear_is_listening();
  static const int kIsListeningFieldNumber = 1;
  inline bool is_listening() const;
  inline void set_is_listening(bool value);

  // optional int64 connection_count = 2;
  inline bool has_connection_count() const;
  inline void clear_connection_count();
  static const int kConnectionCountFieldNumber = 2;
  inline ::google::protobuf::int64 connection_count() const;
  inline void set_connection_count(::google::protobuf::int64 value);

  // optional int64 service_count = 3;
  inline bool has_service_count() const;
  inline void clear_service_count();
  static const int kServiceCountFieldNumber = 3;
  inline ::google::protobuf::int64 service_count() const;
  inline void set_service_count(::google::protobuf::int64 value);

  // optional int64 pending_message_count = 4;
  inline bool has_pending_message_count() const;
  inline void clear_pending_message_count();
  static const int kPendingMessageCountFieldNumber = 4;
  inline ::google::protobuf::int64 pending_message_count() const;
  inline void set_pending_message_count(::google::protobuf::int64 value);

  // optional int64 pending_buffer_size = 5;
  inline bool has_pending_buffer_size() const;
  inline void clear_pending_buffer_size();
  static const int kPendingBufferSizeFieldNumber = 5;
  inline ::google::protobuf::int64 pending_buffer_size() const;
  inline void set_pending_buffer_size(::google::protobuf::int64 value);

  // optional int64 pending_data_size = 6;
  inline bool has_pending_data_size() const;
  inline void clear_pending_data_size();
  static const int kPendingDataSizeFieldNumber = 6;
  inline ::google::protobuf::int64 pending_data_size() const;
  inline void set_pending_data_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.ServerStatusResponse)
 private:
  inline void set_has_is_listening();
  inline void clear_has_is_listening();
  inline void set_has_connection_count();
  inline void clear_has_connection_count();
  inline void set_has_service_count();
  inline void clear_has_service_count();
  inline void set_has_pending_message_count();
  inline void clear_has_pending_message_count();
  inline void set_has_pending_buffer_size();
  inline void clear_has_pending_buffer_size();
  inline void set_has_pending_data_size();
  inline void clear_has_pending_data_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 connection_count_;
  ::google::protobuf::int64 service_count_;
  ::google::protobuf::int64 pending_message_count_;
  ::google::protobuf::int64 pending_buffer_size_;
  ::google::protobuf::int64 pending_data_size_;
  bool is_listening_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ServerStatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class ListServiceRequest : public ::google::protobuf::Message {
 public:
  ListServiceRequest();
  virtual ~ListServiceRequest();

  ListServiceRequest(const ListServiceRequest& from);

  inline ListServiceRequest& operator=(const ListServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServiceRequest& default_instance();

  void Swap(ListServiceRequest* other);

  // implements Message ----------------------------------------------

  ListServiceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServiceRequest& from);
  void MergeFrom(const ListServiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.ListServiceRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ListServiceRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListServiceResponse : public ::google::protobuf::Message {
 public:
  ListServiceResponse();
  virtual ~ListServiceResponse();

  ListServiceResponse(const ListServiceResponse& from);

  inline ListServiceResponse& operator=(const ListServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServiceResponse& default_instance();

  void Swap(ListServiceResponse* other);

  // implements Message ----------------------------------------------

  ListServiceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServiceResponse& from);
  void MergeFrom(const ListServiceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string services = 1;
  inline int services_size() const;
  inline void clear_services();
  static const int kServicesFieldNumber = 1;
  inline const ::std::string& services(int index) const;
  inline ::std::string* mutable_services(int index);
  inline void set_services(int index, const ::std::string& value);
  inline void set_services(int index, const char* value);
  inline void set_services(int index, const char* value, size_t size);
  inline ::std::string* add_services();
  inline void add_services(const ::std::string& value);
  inline void add_services(const char* value);
  inline void add_services(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& services() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_services();

  // repeated .google.protobuf.FileDescriptorProto files = 2;
  inline int files_size() const;
  inline void clear_files();
  static const int kFilesFieldNumber = 2;
  inline const ::google::protobuf::FileDescriptorProto& files(int index) const;
  inline ::google::protobuf::FileDescriptorProto* mutable_files(int index);
  inline ::google::protobuf::FileDescriptorProto* add_files();
  inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::FileDescriptorProto >&
      files() const;
  inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::FileDescriptorProto >*
      mutable_files();

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.ListServiceResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> services_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::FileDescriptorProto > files_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ListServiceResponse* default_instance_;
};
// -------------------------------------------------------------------

class MethodStat : public ::google::protobuf::Message {
 public:
  MethodStat();
  virtual ~MethodStat();

  MethodStat(const MethodStat& from);

  inline MethodStat& operator=(const MethodStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MethodStat& default_instance();

  void Swap(MethodStat* other);

  // implements Message ----------------------------------------------

  MethodStat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MethodStat& from);
  void MergeFrom(const MethodStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string method_name = 1;
  inline bool has_method_name() const;
  inline void clear_method_name();
  static const int kMethodNameFieldNumber = 1;
  inline const ::std::string& method_name() const;
  inline void set_method_name(const ::std::string& value);
  inline void set_method_name(const char* value);
  inline void set_method_name(const char* value, size_t size);
  inline ::std::string* mutable_method_name();
  inline ::std::string* release_method_name();
  inline void set_allocated_method_name(::std::string* method_name);

  // optional int64 succeed_count = 2;
  inline bool has_succeed_count() const;
  inline void clear_succeed_count();
  static const int kSucceedCountFieldNumber = 2;
  inline ::google::protobuf::int64 succeed_count() const;
  inline void set_succeed_count(::google::protobuf::int64 value);

  // optional float succeed_avg_time_us = 3;
  inline bool has_succeed_avg_time_us() const;
  inline void clear_succeed_avg_time_us();
  static const int kSucceedAvgTimeUsFieldNumber = 3;
  inline float succeed_avg_time_us() const;
  inline void set_succeed_avg_time_us(float value);

  // optional int64 succeed_max_time_us = 4;
  inline bool has_succeed_max_time_us() const;
  inline void clear_succeed_max_time_us();
  static const int kSucceedMaxTimeUsFieldNumber = 4;
  inline ::google::protobuf::int64 succeed_max_time_us() const;
  inline void set_succeed_max_time_us(::google::protobuf::int64 value);

  // optional int64 failed_count = 5;
  inline bool has_failed_count() const;
  inline void clear_failed_count();
  static const int kFailedCountFieldNumber = 5;
  inline ::google::protobuf::int64 failed_count() const;
  inline void set_failed_count(::google::protobuf::int64 value);

  // optional float failed_avg_time_us = 6;
  inline bool has_failed_avg_time_us() const;
  inline void clear_failed_avg_time_us();
  static const int kFailedAvgTimeUsFieldNumber = 6;
  inline float failed_avg_time_us() const;
  inline void set_failed_avg_time_us(float value);

  // optional int64 failed_max_time_us = 7;
  inline bool has_failed_max_time_us() const;
  inline void clear_failed_max_time_us();
  static const int kFailedMaxTimeUsFieldNumber = 7;
  inline ::google::protobuf::int64 failed_max_time_us() const;
  inline void set_failed_max_time_us(::google::protobuf::int64 value);

  // optional int64 slot_id = 8;
  inline bool has_slot_id() const;
  inline void clear_slot_id();
  static const int kSlotIdFieldNumber = 8;
  inline ::google::protobuf::int64 slot_id() const;
  inline void set_slot_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.MethodStat)
 private:
  inline void set_has_method_name();
  inline void clear_has_method_name();
  inline void set_has_succeed_count();
  inline void clear_has_succeed_count();
  inline void set_has_succeed_avg_time_us();
  inline void clear_has_succeed_avg_time_us();
  inline void set_has_succeed_max_time_us();
  inline void clear_has_succeed_max_time_us();
  inline void set_has_failed_count();
  inline void clear_has_failed_count();
  inline void set_has_failed_avg_time_us();
  inline void clear_has_failed_avg_time_us();
  inline void set_has_failed_max_time_us();
  inline void clear_has_failed_max_time_us();
  inline void set_has_slot_id();
  inline void clear_has_slot_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* method_name_;
  ::google::protobuf::int64 succeed_count_;
  ::google::protobuf::int64 succeed_max_time_us_;
  float succeed_avg_time_us_;
  float failed_avg_time_us_;
  ::google::protobuf::int64 failed_count_;
  ::google::protobuf::int64 failed_max_time_us_;
  ::google::protobuf::int64 slot_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static MethodStat* default_instance_;
};
// -------------------------------------------------------------------

class ServiceStat : public ::google::protobuf::Message {
 public:
  ServiceStat();
  virtual ~ServiceStat();

  ServiceStat(const ServiceStat& from);

  inline ServiceStat& operator=(const ServiceStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceStat& default_instance();

  void Swap(ServiceStat* other);

  // implements Message ----------------------------------------------

  ServiceStat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceStat& from);
  void MergeFrom(const ServiceStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1;
  inline bool has_service_name() const;
  inline void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  inline const ::std::string& service_name() const;
  inline void set_service_name(const ::std::string& value);
  inline void set_service_name(const char* value);
  inline void set_service_name(const char* value, size_t size);
  inline ::std::string* mutable_service_name();
  inline ::std::string* release_service_name();
  inline void set_allocated_service_name(::std::string* service_name);

  // optional int64 period_seconds = 2;
  inline bool has_period_seconds() const;
  inline void clear_period_seconds();
  static const int kPeriodSecondsFieldNumber = 2;
  inline ::google::protobuf::int64 period_seconds() const;
  inline void set_period_seconds(::google::protobuf::int64 value);

  // optional int64 succeed_count = 3;
  inline bool has_succeed_count() const;
  inline void clear_succeed_count();
  static const int kSucceedCountFieldNumber = 3;
  inline ::google::protobuf::int64 succeed_count() const;
  inline void set_succeed_count(::google::protobuf::int64 value);

  // optional int64 failed_count = 4;
  inline bool has_failed_count() const;
  inline void clear_failed_count();
  static const int kFailedCountFieldNumber = 4;
  inline ::google::protobuf::int64 failed_count() const;
  inline void set_failed_count(::google::protobuf::int64 value);

  // repeated .sofa.pbrpc.builtin.MethodStat method_stats = 5;
  inline int method_stats_size() const;
  inline void clear_method_stats();
  static const int kMethodStatsFieldNumber = 5;
  inline const ::sofa::pbrpc::builtin::MethodStat& method_stats(int index) const;
  inline ::sofa::pbrpc::builtin::MethodStat* mutable_method_stats(int index);
  inline ::sofa::pbrpc::builtin::MethodStat* add_method_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::sofa::pbrpc::builtin::MethodStat >&
      method_stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::sofa::pbrpc::builtin::MethodStat >*
      mutable_method_stats();

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.ServiceStat)
 private:
  inline void set_has_service_name();
  inline void clear_has_service_name();
  inline void set_has_period_seconds();
  inline void clear_has_period_seconds();
  inline void set_has_succeed_count();
  inline void clear_has_succeed_count();
  inline void set_has_failed_count();
  inline void clear_has_failed_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* service_name_;
  ::google::protobuf::int64 period_seconds_;
  ::google::protobuf::int64 succeed_count_;
  ::google::protobuf::int64 failed_count_;
  ::google::protobuf::RepeatedPtrField< ::sofa::pbrpc::builtin::MethodStat > method_stats_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ServiceStat* default_instance_;
};
// -------------------------------------------------------------------

class StatRequest : public ::google::protobuf::Message {
 public:
  StatRequest();
  virtual ~StatRequest();

  StatRequest(const StatRequest& from);

  inline StatRequest& operator=(const StatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatRequest& default_instance();

  void Swap(StatRequest* other);

  // implements Message ----------------------------------------------

  StatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatRequest& from);
  void MergeFrom(const StatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string service_name = 1 [default = "all"];
  inline bool has_service_name() const;
  inline void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  inline const ::std::string& service_name() const;
  inline void set_service_name(const ::std::string& value);
  inline void set_service_name(const char* value);
  inline void set_service_name(const char* value, size_t size);
  inline ::std::string* mutable_service_name();
  inline ::std::string* release_service_name();
  inline void set_allocated_service_name(::std::string* service_name);

  // optional int64 period_seconds = 2 [default = 60];
  inline bool has_period_seconds() const;
  inline void clear_period_seconds();
  static const int kPeriodSecondsFieldNumber = 2;
  inline ::google::protobuf::int64 period_seconds() const;
  inline void set_period_seconds(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.StatRequest)
 private:
  inline void set_has_service_name();
  inline void clear_has_service_name();
  inline void set_has_period_seconds();
  inline void clear_has_period_seconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* service_name_;
  static ::std::string* _default_service_name_;
  ::google::protobuf::int64 period_seconds_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static StatRequest* default_instance_;
};
// -------------------------------------------------------------------

class StatResponse : public ::google::protobuf::Message {
 public:
  StatResponse();
  virtual ~StatResponse();

  StatResponse(const StatResponse& from);

  inline StatResponse& operator=(const StatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatResponse& default_instance();

  void Swap(StatResponse* other);

  // implements Message ----------------------------------------------

  StatResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatResponse& from);
  void MergeFrom(const StatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sofa.pbrpc.builtin.ServiceStat service_stats = 1;
  inline int service_stats_size() const;
  inline void clear_service_stats();
  static const int kServiceStatsFieldNumber = 1;
  inline const ::sofa::pbrpc::builtin::ServiceStat& service_stats(int index) const;
  inline ::sofa::pbrpc::builtin::ServiceStat* mutable_service_stats(int index);
  inline ::sofa::pbrpc::builtin::ServiceStat* add_service_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::sofa::pbrpc::builtin::ServiceStat >&
      service_stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::sofa::pbrpc::builtin::ServiceStat >*
      mutable_service_stats();

  // optional string server_start_time = 2;
  inline bool has_server_start_time() const;
  inline void clear_server_start_time();
  static const int kServerStartTimeFieldNumber = 2;
  inline const ::std::string& server_start_time() const;
  inline void set_server_start_time(const ::std::string& value);
  inline void set_server_start_time(const char* value);
  inline void set_server_start_time(const char* value, size_t size);
  inline ::std::string* mutable_server_start_time();
  inline ::std::string* release_server_start_time();
  inline void set_allocated_server_start_time(::std::string* server_start_time);

  // @@protoc_insertion_point(class_scope:sofa.pbrpc.builtin.StatResponse)
 private:
  inline void set_has_server_start_time();
  inline void clear_has_server_start_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::sofa::pbrpc::builtin::ServiceStat > service_stats_;
  ::std::string* server_start_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_AssignDesc_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();
  friend void protobuf_ShutdownFile_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto();

  void InitAsDefaultInstance();
  static StatResponse* default_instance_;
};
// ===================================================================

class BuiltinService_Stub;

class BuiltinService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline BuiltinService() {};
 public:
  virtual ~BuiltinService();

  typedef BuiltinService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Health(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::HealthRequest* request,
                       ::sofa::pbrpc::builtin::HealthResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ServerOptions(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::ServerOptionsRequest* request,
                       ::sofa::pbrpc::builtin::ServerOptionsResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void UpdateOptions(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::UpdateOptionsRequest* request,
                       ::sofa::pbrpc::builtin::UpdateOptionsResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ServerStatus(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::ServerStatusRequest* request,
                       ::sofa::pbrpc::builtin::ServerStatusResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ListService(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::ListServiceRequest* request,
                       ::sofa::pbrpc::builtin::ListServiceResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Stat(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::StatRequest* request,
                       ::sofa::pbrpc::builtin::StatResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(BuiltinService);
};

class BuiltinService_Stub : public BuiltinService {
 public:
  BuiltinService_Stub(::google::protobuf::RpcChannel* channel);
  BuiltinService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~BuiltinService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements BuiltinService ------------------------------------------

  void Health(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::HealthRequest* request,
                       ::sofa::pbrpc::builtin::HealthResponse* response,
                       ::google::protobuf::Closure* done);
  void ServerOptions(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::ServerOptionsRequest* request,
                       ::sofa::pbrpc::builtin::ServerOptionsResponse* response,
                       ::google::protobuf::Closure* done);
  void UpdateOptions(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::UpdateOptionsRequest* request,
                       ::sofa::pbrpc::builtin::UpdateOptionsResponse* response,
                       ::google::protobuf::Closure* done);
  void ServerStatus(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::ServerStatusRequest* request,
                       ::sofa::pbrpc::builtin::ServerStatusResponse* response,
                       ::google::protobuf::Closure* done);
  void ListService(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::ListServiceRequest* request,
                       ::sofa::pbrpc::builtin::ListServiceResponse* response,
                       ::google::protobuf::Closure* done);
  void Stat(::google::protobuf::RpcController* controller,
                       const ::sofa::pbrpc::builtin::StatRequest* request,
                       ::sofa::pbrpc::builtin::StatResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(BuiltinService_Stub);
};


// ===================================================================


// ===================================================================

// HealthRequest

// -------------------------------------------------------------------

// HealthResponse

// optional string health = 1;
inline bool HealthResponse::has_health() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HealthResponse::set_has_health() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HealthResponse::clear_has_health() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HealthResponse::clear_health() {
  if (health_ != &::google::protobuf::internal::kEmptyString) {
    health_->clear();
  }
  clear_has_health();
}
inline const ::std::string& HealthResponse::health() const {
  return *health_;
}
inline void HealthResponse::set_health(const ::std::string& value) {
  set_has_health();
  if (health_ == &::google::protobuf::internal::kEmptyString) {
    health_ = new ::std::string;
  }
  health_->assign(value);
}
inline void HealthResponse::set_health(const char* value) {
  set_has_health();
  if (health_ == &::google::protobuf::internal::kEmptyString) {
    health_ = new ::std::string;
  }
  health_->assign(value);
}
inline void HealthResponse::set_health(const char* value, size_t size) {
  set_has_health();
  if (health_ == &::google::protobuf::internal::kEmptyString) {
    health_ = new ::std::string;
  }
  health_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HealthResponse::mutable_health() {
  set_has_health();
  if (health_ == &::google::protobuf::internal::kEmptyString) {
    health_ = new ::std::string;
  }
  return health_;
}
inline ::std::string* HealthResponse::release_health() {
  clear_has_health();
  if (health_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = health_;
    health_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HealthResponse::set_allocated_health(::std::string* health) {
  if (health_ != &::google::protobuf::internal::kEmptyString) {
    delete health_;
  }
  if (health) {
    set_has_health();
    health_ = health;
  } else {
    clear_has_health();
    health_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string version = 2;
inline bool HealthResponse::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HealthResponse::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HealthResponse::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HealthResponse::clear_version() {
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& HealthResponse::version() const {
  return *version_;
}
inline void HealthResponse::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void HealthResponse::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void HealthResponse::set_version(const char* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HealthResponse::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  return version_;
}
inline ::std::string* HealthResponse::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HealthResponse::set_allocated_version(::std::string* version) {
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    delete version_;
  }
  if (version) {
    set_has_version();
    version_ = version;
  } else {
    clear_has_version();
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string start_time = 3;
inline bool HealthResponse::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HealthResponse::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HealthResponse::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HealthResponse::clear_start_time() {
  if (start_time_ != &::google::protobuf::internal::kEmptyString) {
    start_time_->clear();
  }
  clear_has_start_time();
}
inline const ::std::string& HealthResponse::start_time() const {
  return *start_time_;
}
inline void HealthResponse::set_start_time(const ::std::string& value) {
  set_has_start_time();
  if (start_time_ == &::google::protobuf::internal::kEmptyString) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void HealthResponse::set_start_time(const char* value) {
  set_has_start_time();
  if (start_time_ == &::google::protobuf::internal::kEmptyString) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void HealthResponse::set_start_time(const char* value, size_t size) {
  set_has_start_time();
  if (start_time_ == &::google::protobuf::internal::kEmptyString) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HealthResponse::mutable_start_time() {
  set_has_start_time();
  if (start_time_ == &::google::protobuf::internal::kEmptyString) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}
inline ::std::string* HealthResponse::release_start_time() {
  clear_has_start_time();
  if (start_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = start_time_;
    start_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HealthResponse::set_allocated_start_time(::std::string* start_time) {
  if (start_time_ != &::google::protobuf::internal::kEmptyString) {
    delete start_time_;
  }
  if (start_time) {
    set_has_start_time();
    start_time_ = start_time;
  } else {
    clear_has_start_time();
    start_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ServerOptions

// optional int64 work_thread_num = 1;
inline bool ServerOptions::has_work_thread_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerOptions::set_has_work_thread_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerOptions::clear_has_work_thread_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerOptions::clear_work_thread_num() {
  work_thread_num_ = GOOGLE_LONGLONG(0);
  clear_has_work_thread_num();
}
inline ::google::protobuf::int64 ServerOptions::work_thread_num() const {
  return work_thread_num_;
}
inline void ServerOptions::set_work_thread_num(::google::protobuf::int64 value) {
  set_has_work_thread_num();
  work_thread_num_ = value;
}

// optional int64 keep_alive_time = 2;
inline bool ServerOptions::has_keep_alive_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerOptions::set_has_keep_alive_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerOptions::clear_has_keep_alive_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerOptions::clear_keep_alive_time() {
  keep_alive_time_ = GOOGLE_LONGLONG(0);
  clear_has_keep_alive_time();
}
inline ::google::protobuf::int64 ServerOptions::keep_alive_time() const {
  return keep_alive_time_;
}
inline void ServerOptions::set_keep_alive_time(::google::protobuf::int64 value) {
  set_has_keep_alive_time();
  keep_alive_time_ = value;
}

// optional int64 max_pending_buffer_size = 3;
inline bool ServerOptions::has_max_pending_buffer_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerOptions::set_has_max_pending_buffer_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerOptions::clear_has_max_pending_buffer_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerOptions::clear_max_pending_buffer_size() {
  max_pending_buffer_size_ = GOOGLE_LONGLONG(0);
  clear_has_max_pending_buffer_size();
}
inline ::google::protobuf::int64 ServerOptions::max_pending_buffer_size() const {
  return max_pending_buffer_size_;
}
inline void ServerOptions::set_max_pending_buffer_size(::google::protobuf::int64 value) {
  set_has_max_pending_buffer_size();
  max_pending_buffer_size_ = value;
}

// optional int64 max_throughput_in = 4;
inline bool ServerOptions::has_max_throughput_in() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerOptions::set_has_max_throughput_in() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerOptions::clear_has_max_throughput_in() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerOptions::clear_max_throughput_in() {
  max_throughput_in_ = GOOGLE_LONGLONG(0);
  clear_has_max_throughput_in();
}
inline ::google::protobuf::int64 ServerOptions::max_throughput_in() const {
  return max_throughput_in_;
}
inline void ServerOptions::set_max_throughput_in(::google::protobuf::int64 value) {
  set_has_max_throughput_in();
  max_throughput_in_ = value;
}

// optional int64 max_throughput_out = 5;
inline bool ServerOptions::has_max_throughput_out() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerOptions::set_has_max_throughput_out() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerOptions::clear_has_max_throughput_out() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerOptions::clear_max_throughput_out() {
  max_throughput_out_ = GOOGLE_LONGLONG(0);
  clear_has_max_throughput_out();
}
inline ::google::protobuf::int64 ServerOptions::max_throughput_out() const {
  return max_throughput_out_;
}
inline void ServerOptions::set_max_throughput_out(::google::protobuf::int64 value) {
  set_has_max_throughput_out();
  max_throughput_out_ = value;
}

// optional bool disable_builtin_services = 6;
inline bool ServerOptions::has_disable_builtin_services() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerOptions::set_has_disable_builtin_services() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerOptions::clear_has_disable_builtin_services() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerOptions::clear_disable_builtin_services() {
  disable_builtin_services_ = false;
  clear_has_disable_builtin_services();
}
inline bool ServerOptions::disable_builtin_services() const {
  return disable_builtin_services_;
}
inline void ServerOptions::set_disable_builtin_services(bool value) {
  set_has_disable_builtin_services();
  disable_builtin_services_ = value;
}

// optional bool disable_list_service = 7;
inline bool ServerOptions::has_disable_list_service() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServerOptions::set_has_disable_list_service() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServerOptions::clear_has_disable_list_service() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServerOptions::clear_disable_list_service() {
  disable_list_service_ = false;
  clear_has_disable_list_service();
}
inline bool ServerOptions::disable_list_service() const {
  return disable_list_service_;
}
inline void ServerOptions::set_disable_list_service(bool value) {
  set_has_disable_list_service();
  disable_list_service_ = value;
}

// -------------------------------------------------------------------

// ServerOptionsRequest

// -------------------------------------------------------------------

// ServerOptionsResponse

// optional .sofa.pbrpc.builtin.ServerOptions options = 1;
inline bool ServerOptionsResponse::has_options() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerOptionsResponse::set_has_options() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerOptionsResponse::clear_has_options() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerOptionsResponse::clear_options() {
  if (options_ != NULL) options_->::sofa::pbrpc::builtin::ServerOptions::Clear();
  clear_has_options();
}
inline const ::sofa::pbrpc::builtin::ServerOptions& ServerOptionsResponse::options() const {
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::sofa::pbrpc::builtin::ServerOptions* ServerOptionsResponse::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::sofa::pbrpc::builtin::ServerOptions;
  return options_;
}
inline ::sofa::pbrpc::builtin::ServerOptions* ServerOptionsResponse::release_options() {
  clear_has_options();
  ::sofa::pbrpc::builtin::ServerOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void ServerOptionsResponse::set_allocated_options(::sofa::pbrpc::builtin::ServerOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
}

// -------------------------------------------------------------------

// UpdateOptionsRequest

// optional .sofa.pbrpc.builtin.ServerOptions options = 1;
inline bool UpdateOptionsRequest::has_options() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateOptionsRequest::set_has_options() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateOptionsRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateOptionsRequest::clear_options() {
  if (options_ != NULL) options_->::sofa::pbrpc::builtin::ServerOptions::Clear();
  clear_has_options();
}
inline const ::sofa::pbrpc::builtin::ServerOptions& UpdateOptionsRequest::options() const {
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::sofa::pbrpc::builtin::ServerOptions* UpdateOptionsRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::sofa::pbrpc::builtin::ServerOptions;
  return options_;
}
inline ::sofa::pbrpc::builtin::ServerOptions* UpdateOptionsRequest::release_options() {
  clear_has_options();
  ::sofa::pbrpc::builtin::ServerOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void UpdateOptionsRequest::set_allocated_options(::sofa::pbrpc::builtin::ServerOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
}

// -------------------------------------------------------------------

// UpdateOptionsResponse

// optional .sofa.pbrpc.builtin.ServerOptions options = 1;
inline bool UpdateOptionsResponse::has_options() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateOptionsResponse::set_has_options() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateOptionsResponse::clear_has_options() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateOptionsResponse::clear_options() {
  if (options_ != NULL) options_->::sofa::pbrpc::builtin::ServerOptions::Clear();
  clear_has_options();
}
inline const ::sofa::pbrpc::builtin::ServerOptions& UpdateOptionsResponse::options() const {
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::sofa::pbrpc::builtin::ServerOptions* UpdateOptionsResponse::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::sofa::pbrpc::builtin::ServerOptions;
  return options_;
}
inline ::sofa::pbrpc::builtin::ServerOptions* UpdateOptionsResponse::release_options() {
  clear_has_options();
  ::sofa::pbrpc::builtin::ServerOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void UpdateOptionsResponse::set_allocated_options(::sofa::pbrpc::builtin::ServerOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
}

// -------------------------------------------------------------------

// ServerStatusRequest

// -------------------------------------------------------------------

// ServerStatusResponse

// optional bool is_listening = 1;
inline bool ServerStatusResponse::has_is_listening() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerStatusResponse::set_has_is_listening() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerStatusResponse::clear_has_is_listening() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerStatusResponse::clear_is_listening() {
  is_listening_ = false;
  clear_has_is_listening();
}
inline bool ServerStatusResponse::is_listening() const {
  return is_listening_;
}
inline void ServerStatusResponse::set_is_listening(bool value) {
  set_has_is_listening();
  is_listening_ = value;
}

// optional int64 connection_count = 2;
inline bool ServerStatusResponse::has_connection_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerStatusResponse::set_has_connection_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerStatusResponse::clear_has_connection_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerStatusResponse::clear_connection_count() {
  connection_count_ = GOOGLE_LONGLONG(0);
  clear_has_connection_count();
}
inline ::google::protobuf::int64 ServerStatusResponse::connection_count() const {
  return connection_count_;
}
inline void ServerStatusResponse::set_connection_count(::google::protobuf::int64 value) {
  set_has_connection_count();
  connection_count_ = value;
}

// optional int64 service_count = 3;
inline bool ServerStatusResponse::has_service_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerStatusResponse::set_has_service_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerStatusResponse::clear_has_service_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerStatusResponse::clear_service_count() {
  service_count_ = GOOGLE_LONGLONG(0);
  clear_has_service_count();
}
inline ::google::protobuf::int64 ServerStatusResponse::service_count() const {
  return service_count_;
}
inline void ServerStatusResponse::set_service_count(::google::protobuf::int64 value) {
  set_has_service_count();
  service_count_ = value;
}

// optional int64 pending_message_count = 4;
inline bool ServerStatusResponse::has_pending_message_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerStatusResponse::set_has_pending_message_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerStatusResponse::clear_has_pending_message_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerStatusResponse::clear_pending_message_count() {
  pending_message_count_ = GOOGLE_LONGLONG(0);
  clear_has_pending_message_count();
}
inline ::google::protobuf::int64 ServerStatusResponse::pending_message_count() const {
  return pending_message_count_;
}
inline void ServerStatusResponse::set_pending_message_count(::google::protobuf::int64 value) {
  set_has_pending_message_count();
  pending_message_count_ = value;
}

// optional int64 pending_buffer_size = 5;
inline bool ServerStatusResponse::has_pending_buffer_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerStatusResponse::set_has_pending_buffer_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerStatusResponse::clear_has_pending_buffer_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerStatusResponse::clear_pending_buffer_size() {
  pending_buffer_size_ = GOOGLE_LONGLONG(0);
  clear_has_pending_buffer_size();
}
inline ::google::protobuf::int64 ServerStatusResponse::pending_buffer_size() const {
  return pending_buffer_size_;
}
inline void ServerStatusResponse::set_pending_buffer_size(::google::protobuf::int64 value) {
  set_has_pending_buffer_size();
  pending_buffer_size_ = value;
}

// optional int64 pending_data_size = 6;
inline bool ServerStatusResponse::has_pending_data_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerStatusResponse::set_has_pending_data_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerStatusResponse::clear_has_pending_data_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerStatusResponse::clear_pending_data_size() {
  pending_data_size_ = GOOGLE_LONGLONG(0);
  clear_has_pending_data_size();
}
inline ::google::protobuf::int64 ServerStatusResponse::pending_data_size() const {
  return pending_data_size_;
}
inline void ServerStatusResponse::set_pending_data_size(::google::protobuf::int64 value) {
  set_has_pending_data_size();
  pending_data_size_ = value;
}

// -------------------------------------------------------------------

// ListServiceRequest

// -------------------------------------------------------------------

// ListServiceResponse

// repeated string services = 1;
inline int ListServiceResponse::services_size() const {
  return services_.size();
}
inline void ListServiceResponse::clear_services() {
  services_.Clear();
}
inline const ::std::string& ListServiceResponse::services(int index) const {
  return services_.Get(index);
}
inline ::std::string* ListServiceResponse::mutable_services(int index) {
  return services_.Mutable(index);
}
inline void ListServiceResponse::set_services(int index, const ::std::string& value) {
  services_.Mutable(index)->assign(value);
}
inline void ListServiceResponse::set_services(int index, const char* value) {
  services_.Mutable(index)->assign(value);
}
inline void ListServiceResponse::set_services(int index, const char* value, size_t size) {
  services_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ListServiceResponse::add_services() {
  return services_.Add();
}
inline void ListServiceResponse::add_services(const ::std::string& value) {
  services_.Add()->assign(value);
}
inline void ListServiceResponse::add_services(const char* value) {
  services_.Add()->assign(value);
}
inline void ListServiceResponse::add_services(const char* value, size_t size) {
  services_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListServiceResponse::services() const {
  return services_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListServiceResponse::mutable_services() {
  return &services_;
}

// repeated .google.protobuf.FileDescriptorProto files = 2;
inline int ListServiceResponse::files_size() const {
  return files_.size();
}
inline void ListServiceResponse::clear_files() {
  files_.Clear();
}
inline const ::google::protobuf::FileDescriptorProto& ListServiceResponse::files(int index) const {
  return files_.Get(index);
}
inline ::google::protobuf::FileDescriptorProto* ListServiceResponse::mutable_files(int index) {
  return files_.Mutable(index);
}
inline ::google::protobuf::FileDescriptorProto* ListServiceResponse::add_files() {
  return files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::FileDescriptorProto >&
ListServiceResponse::files() const {
  return files_;
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::FileDescriptorProto >*
ListServiceResponse::mutable_files() {
  return &files_;
}

// -------------------------------------------------------------------

// MethodStat

// optional string method_name = 1;
inline bool MethodStat::has_method_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MethodStat::set_has_method_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MethodStat::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MethodStat::clear_method_name() {
  if (method_name_ != &::google::protobuf::internal::kEmptyString) {
    method_name_->clear();
  }
  clear_has_method_name();
}
inline const ::std::string& MethodStat::method_name() const {
  return *method_name_;
}
inline void MethodStat::set_method_name(const ::std::string& value) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(value);
}
inline void MethodStat::set_method_name(const char* value) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(value);
}
inline void MethodStat::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MethodStat::mutable_method_name() {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  return method_name_;
}
inline ::std::string* MethodStat::release_method_name() {
  clear_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = method_name_;
    method_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MethodStat::set_allocated_method_name(::std::string* method_name) {
  if (method_name_ != &::google::protobuf::internal::kEmptyString) {
    delete method_name_;
  }
  if (method_name) {
    set_has_method_name();
    method_name_ = method_name;
  } else {
    clear_has_method_name();
    method_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 succeed_count = 2;
inline bool MethodStat::has_succeed_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MethodStat::set_has_succeed_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MethodStat::clear_has_succeed_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MethodStat::clear_succeed_count() {
  succeed_count_ = GOOGLE_LONGLONG(0);
  clear_has_succeed_count();
}
inline ::google::protobuf::int64 MethodStat::succeed_count() const {
  return succeed_count_;
}
inline void MethodStat::set_succeed_count(::google::protobuf::int64 value) {
  set_has_succeed_count();
  succeed_count_ = value;
}

// optional float succeed_avg_time_us = 3;
inline bool MethodStat::has_succeed_avg_time_us() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MethodStat::set_has_succeed_avg_time_us() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MethodStat::clear_has_succeed_avg_time_us() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MethodStat::clear_succeed_avg_time_us() {
  succeed_avg_time_us_ = 0;
  clear_has_succeed_avg_time_us();
}
inline float MethodStat::succeed_avg_time_us() const {
  return succeed_avg_time_us_;
}
inline void MethodStat::set_succeed_avg_time_us(float value) {
  set_has_succeed_avg_time_us();
  succeed_avg_time_us_ = value;
}

// optional int64 succeed_max_time_us = 4;
inline bool MethodStat::has_succeed_max_time_us() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MethodStat::set_has_succeed_max_time_us() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MethodStat::clear_has_succeed_max_time_us() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MethodStat::clear_succeed_max_time_us() {
  succeed_max_time_us_ = GOOGLE_LONGLONG(0);
  clear_has_succeed_max_time_us();
}
inline ::google::protobuf::int64 MethodStat::succeed_max_time_us() const {
  return succeed_max_time_us_;
}
inline void MethodStat::set_succeed_max_time_us(::google::protobuf::int64 value) {
  set_has_succeed_max_time_us();
  succeed_max_time_us_ = value;
}

// optional int64 failed_count = 5;
inline bool MethodStat::has_failed_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MethodStat::set_has_failed_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MethodStat::clear_has_failed_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MethodStat::clear_failed_count() {
  failed_count_ = GOOGLE_LONGLONG(0);
  clear_has_failed_count();
}
inline ::google::protobuf::int64 MethodStat::failed_count() const {
  return failed_count_;
}
inline void MethodStat::set_failed_count(::google::protobuf::int64 value) {
  set_has_failed_count();
  failed_count_ = value;
}

// optional float failed_avg_time_us = 6;
inline bool MethodStat::has_failed_avg_time_us() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MethodStat::set_has_failed_avg_time_us() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MethodStat::clear_has_failed_avg_time_us() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MethodStat::clear_failed_avg_time_us() {
  failed_avg_time_us_ = 0;
  clear_has_failed_avg_time_us();
}
inline float MethodStat::failed_avg_time_us() const {
  return failed_avg_time_us_;
}
inline void MethodStat::set_failed_avg_time_us(float value) {
  set_has_failed_avg_time_us();
  failed_avg_time_us_ = value;
}

// optional int64 failed_max_time_us = 7;
inline bool MethodStat::has_failed_max_time_us() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MethodStat::set_has_failed_max_time_us() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MethodStat::clear_has_failed_max_time_us() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MethodStat::clear_failed_max_time_us() {
  failed_max_time_us_ = GOOGLE_LONGLONG(0);
  clear_has_failed_max_time_us();
}
inline ::google::protobuf::int64 MethodStat::failed_max_time_us() const {
  return failed_max_time_us_;
}
inline void MethodStat::set_failed_max_time_us(::google::protobuf::int64 value) {
  set_has_failed_max_time_us();
  failed_max_time_us_ = value;
}

// optional int64 slot_id = 8;
inline bool MethodStat::has_slot_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MethodStat::set_has_slot_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MethodStat::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MethodStat::clear_slot_id() {
  slot_id_ = GOOGLE_LONGLONG(0);
  clear_has_slot_id();
}
inline ::google::protobuf::int64 MethodStat::slot_id() const {
  return slot_id_;
}
inline void MethodStat::set_slot_id(::google::protobuf::int64 value) {
  set_has_slot_id();
  slot_id_ = value;
}

// -------------------------------------------------------------------

// ServiceStat

// optional string service_name = 1;
inline bool ServiceStat::has_service_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceStat::set_has_service_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceStat::clear_has_service_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceStat::clear_service_name() {
  if (service_name_ != &::google::protobuf::internal::kEmptyString) {
    service_name_->clear();
  }
  clear_has_service_name();
}
inline const ::std::string& ServiceStat::service_name() const {
  return *service_name_;
}
inline void ServiceStat::set_service_name(const ::std::string& value) {
  set_has_service_name();
  if (service_name_ == &::google::protobuf::internal::kEmptyString) {
    service_name_ = new ::std::string;
  }
  service_name_->assign(value);
}
inline void ServiceStat::set_service_name(const char* value) {
  set_has_service_name();
  if (service_name_ == &::google::protobuf::internal::kEmptyString) {
    service_name_ = new ::std::string;
  }
  service_name_->assign(value);
}
inline void ServiceStat::set_service_name(const char* value, size_t size) {
  set_has_service_name();
  if (service_name_ == &::google::protobuf::internal::kEmptyString) {
    service_name_ = new ::std::string;
  }
  service_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServiceStat::mutable_service_name() {
  set_has_service_name();
  if (service_name_ == &::google::protobuf::internal::kEmptyString) {
    service_name_ = new ::std::string;
  }
  return service_name_;
}
inline ::std::string* ServiceStat::release_service_name() {
  clear_has_service_name();
  if (service_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = service_name_;
    service_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ServiceStat::set_allocated_service_name(::std::string* service_name) {
  if (service_name_ != &::google::protobuf::internal::kEmptyString) {
    delete service_name_;
  }
  if (service_name) {
    set_has_service_name();
    service_name_ = service_name;
  } else {
    clear_has_service_name();
    service_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 period_seconds = 2;
inline bool ServiceStat::has_period_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceStat::set_has_period_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceStat::clear_has_period_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceStat::clear_period_seconds() {
  period_seconds_ = GOOGLE_LONGLONG(0);
  clear_has_period_seconds();
}
inline ::google::protobuf::int64 ServiceStat::period_seconds() const {
  return period_seconds_;
}
inline void ServiceStat::set_period_seconds(::google::protobuf::int64 value) {
  set_has_period_seconds();
  period_seconds_ = value;
}

// optional int64 succeed_count = 3;
inline bool ServiceStat::has_succeed_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServiceStat::set_has_succeed_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServiceStat::clear_has_succeed_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServiceStat::clear_succeed_count() {
  succeed_count_ = GOOGLE_LONGLONG(0);
  clear_has_succeed_count();
}
inline ::google::protobuf::int64 ServiceStat::succeed_count() const {
  return succeed_count_;
}
inline void ServiceStat::set_succeed_count(::google::protobuf::int64 value) {
  set_has_succeed_count();
  succeed_count_ = value;
}

// optional int64 failed_count = 4;
inline bool ServiceStat::has_failed_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServiceStat::set_has_failed_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServiceStat::clear_has_failed_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServiceStat::clear_failed_count() {
  failed_count_ = GOOGLE_LONGLONG(0);
  clear_has_failed_count();
}
inline ::google::protobuf::int64 ServiceStat::failed_count() const {
  return failed_count_;
}
inline void ServiceStat::set_failed_count(::google::protobuf::int64 value) {
  set_has_failed_count();
  failed_count_ = value;
}

// repeated .sofa.pbrpc.builtin.MethodStat method_stats = 5;
inline int ServiceStat::method_stats_size() const {
  return method_stats_.size();
}
inline void ServiceStat::clear_method_stats() {
  method_stats_.Clear();
}
inline const ::sofa::pbrpc::builtin::MethodStat& ServiceStat::method_stats(int index) const {
  return method_stats_.Get(index);
}
inline ::sofa::pbrpc::builtin::MethodStat* ServiceStat::mutable_method_stats(int index) {
  return method_stats_.Mutable(index);
}
inline ::sofa::pbrpc::builtin::MethodStat* ServiceStat::add_method_stats() {
  return method_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sofa::pbrpc::builtin::MethodStat >&
ServiceStat::method_stats() const {
  return method_stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::sofa::pbrpc::builtin::MethodStat >*
ServiceStat::mutable_method_stats() {
  return &method_stats_;
}

// -------------------------------------------------------------------

// StatRequest

// optional string service_name = 1 [default = "all"];
inline bool StatRequest::has_service_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatRequest::set_has_service_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatRequest::clear_has_service_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatRequest::clear_service_name() {
  if (service_name_ != _default_service_name_) {
    service_name_->assign(*_default_service_name_);
  }
  clear_has_service_name();
}
inline const ::std::string& StatRequest::service_name() const {
  return *service_name_;
}
inline void StatRequest::set_service_name(const ::std::string& value) {
  set_has_service_name();
  if (service_name_ == _default_service_name_) {
    service_name_ = new ::std::string;
  }
  service_name_->assign(value);
}
inline void StatRequest::set_service_name(const char* value) {
  set_has_service_name();
  if (service_name_ == _default_service_name_) {
    service_name_ = new ::std::string;
  }
  service_name_->assign(value);
}
inline void StatRequest::set_service_name(const char* value, size_t size) {
  set_has_service_name();
  if (service_name_ == _default_service_name_) {
    service_name_ = new ::std::string;
  }
  service_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatRequest::mutable_service_name() {
  set_has_service_name();
  if (service_name_ == _default_service_name_) {
    service_name_ = new ::std::string(*_default_service_name_);
  }
  return service_name_;
}
inline ::std::string* StatRequest::release_service_name() {
  clear_has_service_name();
  if (service_name_ == _default_service_name_) {
    return NULL;
  } else {
    ::std::string* temp = service_name_;
    service_name_ = const_cast< ::std::string*>(_default_service_name_);
    return temp;
  }
}
inline void StatRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name_ != _default_service_name_) {
    delete service_name_;
  }
  if (service_name) {
    set_has_service_name();
    service_name_ = service_name;
  } else {
    clear_has_service_name();
    service_name_ = const_cast< ::std::string*>(_default_service_name_);
  }
}

// optional int64 period_seconds = 2 [default = 60];
inline bool StatRequest::has_period_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatRequest::set_has_period_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatRequest::clear_has_period_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatRequest::clear_period_seconds() {
  period_seconds_ = GOOGLE_LONGLONG(60);
  clear_has_period_seconds();
}
inline ::google::protobuf::int64 StatRequest::period_seconds() const {
  return period_seconds_;
}
inline void StatRequest::set_period_seconds(::google::protobuf::int64 value) {
  set_has_period_seconds();
  period_seconds_ = value;
}

// -------------------------------------------------------------------

// StatResponse

// repeated .sofa.pbrpc.builtin.ServiceStat service_stats = 1;
inline int StatResponse::service_stats_size() const {
  return service_stats_.size();
}
inline void StatResponse::clear_service_stats() {
  service_stats_.Clear();
}
inline const ::sofa::pbrpc::builtin::ServiceStat& StatResponse::service_stats(int index) const {
  return service_stats_.Get(index);
}
inline ::sofa::pbrpc::builtin::ServiceStat* StatResponse::mutable_service_stats(int index) {
  return service_stats_.Mutable(index);
}
inline ::sofa::pbrpc::builtin::ServiceStat* StatResponse::add_service_stats() {
  return service_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sofa::pbrpc::builtin::ServiceStat >&
StatResponse::service_stats() const {
  return service_stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::sofa::pbrpc::builtin::ServiceStat >*
StatResponse::mutable_service_stats() {
  return &service_stats_;
}

// optional string server_start_time = 2;
inline bool StatResponse::has_server_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatResponse::set_has_server_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatResponse::clear_has_server_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatResponse::clear_server_start_time() {
  if (server_start_time_ != &::google::protobuf::internal::kEmptyString) {
    server_start_time_->clear();
  }
  clear_has_server_start_time();
}
inline const ::std::string& StatResponse::server_start_time() const {
  return *server_start_time_;
}
inline void StatResponse::set_server_start_time(const ::std::string& value) {
  set_has_server_start_time();
  if (server_start_time_ == &::google::protobuf::internal::kEmptyString) {
    server_start_time_ = new ::std::string;
  }
  server_start_time_->assign(value);
}
inline void StatResponse::set_server_start_time(const char* value) {
  set_has_server_start_time();
  if (server_start_time_ == &::google::protobuf::internal::kEmptyString) {
    server_start_time_ = new ::std::string;
  }
  server_start_time_->assign(value);
}
inline void StatResponse::set_server_start_time(const char* value, size_t size) {
  set_has_server_start_time();
  if (server_start_time_ == &::google::protobuf::internal::kEmptyString) {
    server_start_time_ = new ::std::string;
  }
  server_start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatResponse::mutable_server_start_time() {
  set_has_server_start_time();
  if (server_start_time_ == &::google::protobuf::internal::kEmptyString) {
    server_start_time_ = new ::std::string;
  }
  return server_start_time_;
}
inline ::std::string* StatResponse::release_server_start_time() {
  clear_has_server_start_time();
  if (server_start_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = server_start_time_;
    server_start_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StatResponse::set_allocated_server_start_time(::std::string* server_start_time) {
  if (server_start_time_ != &::google::protobuf::internal::kEmptyString) {
    delete server_start_time_;
  }
  if (server_start_time) {
    set_has_server_start_time();
    server_start_time_ = server_start_time;
  } else {
    clear_has_server_start_time();
    server_start_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace builtin
}  // namespace pbrpc
}  // namespace sofa

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto__INCLUDED
