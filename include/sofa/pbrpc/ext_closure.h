#ifndef _SOFA_PBRPC_EXT_CLOSURE_H_
#define _SOFA_PBRPC_EXT_CLOSURE_H_

/////////////////////////////////////////////////////
// DO NOT EDIT!!!
// this header file is auto generated by perl script
// edit the generator if necessary
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
// Support:
// 1, Support pre-bind and post-bind for general
//    function and class method, up to 10 arguments.
// 2, Support pass argument by reference, though bind
//    always by value.
// 3, When bind class method, support use
//    "sofa::pbrpc::shared_ptr" as this pointer of class.
// 4, Support create temporary and permanent closure:
//    Temporary closure (self destoryed after call):
//        NewExtClosure();
//    Permanent closure (do not destoryed by self):
//        NewPermanentExtClosure();
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
// Usage:
// 1, General function:
//    
//    void f1(int pre_arg, double post_arg);
//    
//    ExtClosure<void(double)>* c1 = NewExtClosure(&f1, 1);
//    c1->Run(2.0);
//    
//    ExtClosure<void(double)>* c2 = NewPermanentExtClosure(&f1, 1);
//    c2->Run(2.0);
//    
// 2, Class method:
//    
//    class C1
//    {
//        public:
//            int m1(int pre_arg, double post_arg);
//    };
//    
//    C1 obj;
//    
//    ExtClosure<int(double)>* c3 = NewExtClosure(&obj, &C1::m1, 1);
//    c3->Run(2.0);
//    
//    ExtClosure<int(double)>* c4 = NewPermanentExtClosure(&obj, &C1::m1, 1);
//    c4->Run(2.0);
//    
//    class C2 : public sofa::pbrpc::enable_shared_from_this<C2>
//    {
//        public:
//            int m1(int pre_arg, double post_arg);
//     
//            void m2()
//            {
//                ExtClosure<int(double)>* c7 = NewExtClosure(
//                                  shared_from_this(), &C2::m1, 1);
//                c7->Run(2.0);
//             
//                ExtClosure<int(double)>* c8 = NewPermanentExtClosure(
//                                  shared_from_this(), &C2::m1, 1);
//                c8->Run(2.0);
//            }
//    };
//    
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
//
// //////// ExtClosure without return type ////////
// ExtClosure: x->Run(), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: x->Run(arg1), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: x->Run(arg1, arg2), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: x->Run(arg1, arg2, arg3), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: x->Run(arg1, arg2, arg3, arg4), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: x->Run(arg1, arg2, arg3, arg4, arg5), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: x->Run(arg1, arg2, arg3, arg4, arg5, arg6), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: x->Run(arg1, arg2, arg3, arg4, arg5, arg6, arg7), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: x->Run(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: x->Run(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: x->Run(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10), ExtClosure can pre-bind 0~10 argument(s).
//
// /////// ExtClosure with return type of R ///////
// ExtClosure: R = x->Run(), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: R = x->Run(arg1), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: R = x->Run(arg1, arg2), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: R = x->Run(arg1, arg2, arg3), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: R = x->Run(arg1, arg2, arg3, arg4), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: R = x->Run(arg1, arg2, arg3, arg4, arg5), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: R = x->Run(arg1, arg2, arg3, arg4, arg5, arg6), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: R = x->Run(arg1, arg2, arg3, arg4, arg5, arg6, arg7), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: R = x->Run(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: R = x->Run(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9), ExtClosure can pre-bind 0~10 argument(s).
// ExtClosure: R = x->Run(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10), ExtClosure can pre-bind 0~10 argument(s).
//
/////////////////////////////////////////////////////

#include <sofa/pbrpc/closure_helper.h>

namespace sofa {
namespace pbrpc{

/// base class for all ExtClosures
class ExtClosureBase
{
public:
    virtual ~ExtClosureBase() {}
    virtual bool IsSelfDelete() const = 0;
};

// primary template
template <typename Signature>class ExtClosure : public ExtClosureBase
{
};

// specified for 0 argument
template <
    typename R
>
class ExtClosure<R ()>
    : public ExtClosureBase
{
public:
    virtual R Run() = 0;
};

// specified for 1 argument
template <
    typename R,
    typename Arg1
>
class ExtClosure<R (Arg1)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1) = 0;
};

// specified for 2 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2
>
class ExtClosure<R (Arg1, Arg2)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2) = 0;
};

// specified for 3 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class ExtClosure<R (Arg1, Arg2, Arg3)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) = 0;
};

// specified for 4 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) = 0;
};

// specified for 5 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) = 0;
};

// specified for 6 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) = 0;
};

// specified for 7 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) = 0;
};

// specified for 8 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) = 0;
};

// specified for 9 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) = 0;
};

// specified for 10 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) = 0;
};

// specified for 11 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10,
    typename Arg11
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10, Arg11 arg11) = 0;
};

// specified for 12 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10,
    typename Arg11,
    typename Arg12
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10, Arg11 arg11, Arg12 arg12) = 0;
};

// specified for 13 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10,
    typename Arg11,
    typename Arg12,
    typename Arg13
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10, Arg11 arg11, Arg12 arg12, Arg13 arg13) = 0;
};

// specified for 14 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10,
    typename Arg11,
    typename Arg12,
    typename Arg13,
    typename Arg14
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10, Arg11 arg11, Arg12 arg12, Arg13 arg13, Arg14 arg14) = 0;
};

// specified for 15 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10,
    typename Arg11,
    typename Arg12,
    typename Arg13,
    typename Arg14,
    typename Arg15
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10, Arg11 arg11, Arg12 arg12, Arg13 arg13, Arg14 arg14, Arg15 arg15) = 0;
};

// specified for 16 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10,
    typename Arg11,
    typename Arg12,
    typename Arg13,
    typename Arg14,
    typename Arg15,
    typename Arg16
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10, Arg11 arg11, Arg12 arg12, Arg13 arg13, Arg14 arg14, Arg15 arg15, Arg16 arg16) = 0;
};

// specified for 17 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10,
    typename Arg11,
    typename Arg12,
    typename Arg13,
    typename Arg14,
    typename Arg15,
    typename Arg16,
    typename Arg17
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10, Arg11 arg11, Arg12 arg12, Arg13 arg13, Arg14 arg14, Arg15 arg15, Arg16 arg16, Arg17 arg17) = 0;
};

// specified for 18 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10,
    typename Arg11,
    typename Arg12,
    typename Arg13,
    typename Arg14,
    typename Arg15,
    typename Arg16,
    typename Arg17,
    typename Arg18
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10, Arg11 arg11, Arg12 arg12, Arg13 arg13, Arg14 arg14, Arg15 arg15, Arg16 arg16, Arg17 arg17, Arg18 arg18) = 0;
};

// specified for 19 arguments
template <
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10,
    typename Arg11,
    typename Arg12,
    typename Arg13,
    typename Arg14,
    typename Arg15,
    typename Arg16,
    typename Arg17,
    typename Arg18,
    typename Arg19
>
class ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19)>
    : public ExtClosureBase
{
public:
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10, Arg11 arg11, Arg12 arg12, Arg13 arg13, Arg14 arg14, Arg15 arg15, Arg16 arg16, Arg17 arg17, Arg18 arg18, Arg19 arg19) = 0;
};
////////////////////////////////////////////////////
//////////// class method closures /////////////////
////////////////////////////////////////////////////

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass
>
class MethodExtClosure_Arg0_Bind0 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)();
public:
    MethodExtClosure_Arg0_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)();
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1
>
class MethodExtClosure_Arg0_Bind1 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)(PreArg1);
public:
    MethodExtClosure_Arg0_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2
>
class MethodExtClosure_Arg0_Bind2 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2);
public:
    MethodExtClosure_Arg0_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3
>
class MethodExtClosure_Arg0_Bind3 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3);
public:
    MethodExtClosure_Arg0_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4
>
class MethodExtClosure_Arg0_Bind4 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4);
public:
    MethodExtClosure_Arg0_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5
>
class MethodExtClosure_Arg0_Bind5 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5);
public:
    MethodExtClosure_Arg0_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6
>
class MethodExtClosure_Arg0_Bind6 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6);
public:
    MethodExtClosure_Arg0_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7
>
class MethodExtClosure_Arg0_Bind7 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7);
public:
    MethodExtClosure_Arg0_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8
>
class MethodExtClosure_Arg0_Bind8 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8);
public:
    MethodExtClosure_Arg0_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9
>
class MethodExtClosure_Arg0_Bind9 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9);
public:
    MethodExtClosure_Arg0_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10
>
class MethodExtClosure_Arg0_Bind10 : public ExtClosure<R ()> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10);
public:
    MethodExtClosure_Arg0_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg0_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind0 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(Arg1);
public:
    MethodExtClosure_Arg1_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind1 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(PreArg1, Arg1);
public:
    MethodExtClosure_Arg1_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind2 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, Arg1);
public:
    MethodExtClosure_Arg1_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind3 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, Arg1);
public:
    MethodExtClosure_Arg1_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind4 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1);
public:
    MethodExtClosure_Arg1_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind5 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1);
public:
    MethodExtClosure_Arg1_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind6 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1);
public:
    MethodExtClosure_Arg1_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind7 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1);
public:
    MethodExtClosure_Arg1_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind8 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1);
public:
    MethodExtClosure_Arg1_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind9 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1);
public:
    MethodExtClosure_Arg1_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1
>
class MethodExtClosure_Arg1_Bind10 : public ExtClosure<R (Arg1)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1);
public:
    MethodExtClosure_Arg1_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg1_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind0 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind1 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(PreArg1, Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind2 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind3 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind4 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind5 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind6 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind7 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind8 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind9 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2
>
class MethodExtClosure_Arg2_Bind10 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2);
public:
    MethodExtClosure_Arg2_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg2_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(PreArg1, Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class MethodExtClosure_Arg3_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3);
public:
    MethodExtClosure_Arg3_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg3_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(PreArg1, Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class MethodExtClosure_Arg4_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4);
public:
    MethodExtClosure_Arg4_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg4_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class MethodExtClosure_Arg5_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    MethodExtClosure_Arg5_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg5_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class MethodExtClosure_Arg6_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    MethodExtClosure_Arg6_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg6_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class MethodExtClosure_Arg7_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    MethodExtClosure_Arg7_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg7_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class MethodExtClosure_Arg8_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    MethodExtClosure_Arg8_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg8_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class MethodExtClosure_Arg9_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    MethodExtClosure_Arg9_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg9_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind0(ClassPointer object, MethodType method):
        m_object(object), m_method(method) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind0> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind1(ClassPointer object, MethodType method, PreArg1 pa1):
        m_object(object), m_method(method), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind1> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind2(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind2> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind3(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind3> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind4(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind4> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind5(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind5> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind6(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind6> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind7(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind7> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind8(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind8> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind9(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind9> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename ClassPointer, typename MethodClass,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class MethodExtClosure_Arg10_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (MethodClass::*MethodType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    MethodExtClosure_Arg10_Bind10(ClassPointer object, MethodType method, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_object(object), m_method(method), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, MethodExtClosure_Arg10_Bind10> self_deleter(this);
        return (get_pointer(m_object)->*m_method)(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    ClassPointer m_object;
    MethodType m_method;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

////////////////////////////////////////////////////
//////////// nomal function closures //////////////////
////////////////////////////////////////////////////

template <
    bool SelfDeleting,
    typename R
>
class FunctionExtClosure_Arg0_Bind0 : public ExtClosure<R ()> {
    typedef R (*FunctionType)();
public:
    FunctionExtClosure_Arg0_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind0> self_deleter(this);
        return m_function();
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1
>
class FunctionExtClosure_Arg0_Bind1 : public ExtClosure<R ()> {
    typedef R (*FunctionType)(PreArg1);
public:
    FunctionExtClosure_Arg0_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind1> self_deleter(this);
        return m_function(m_pa1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2
>
class FunctionExtClosure_Arg0_Bind2 : public ExtClosure<R ()> {
    typedef R (*FunctionType)(PreArg1, PreArg2);
public:
    FunctionExtClosure_Arg0_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3
>
class FunctionExtClosure_Arg0_Bind3 : public ExtClosure<R ()> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3);
public:
    FunctionExtClosure_Arg0_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4
>
class FunctionExtClosure_Arg0_Bind4 : public ExtClosure<R ()> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4);
public:
    FunctionExtClosure_Arg0_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5
>
class FunctionExtClosure_Arg0_Bind5 : public ExtClosure<R ()> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5);
public:
    FunctionExtClosure_Arg0_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6
>
class FunctionExtClosure_Arg0_Bind6 : public ExtClosure<R ()> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6);
public:
    FunctionExtClosure_Arg0_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7
>
class FunctionExtClosure_Arg0_Bind7 : public ExtClosure<R ()> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7);
public:
    FunctionExtClosure_Arg0_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8
>
class FunctionExtClosure_Arg0_Bind8 : public ExtClosure<R ()> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8);
public:
    FunctionExtClosure_Arg0_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9
>
class FunctionExtClosure_Arg0_Bind9 : public ExtClosure<R ()> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9);
public:
    FunctionExtClosure_Arg0_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10
>
class FunctionExtClosure_Arg0_Bind10 : public ExtClosure<R ()> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10);
public:
    FunctionExtClosure_Arg0_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run() {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg0_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind0 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(Arg1);
public:
    FunctionExtClosure_Arg1_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind0> self_deleter(this);
        return m_function(arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind1 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(PreArg1, Arg1);
public:
    FunctionExtClosure_Arg1_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind1> self_deleter(this);
        return m_function(m_pa1, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind2 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, Arg1);
public:
    FunctionExtClosure_Arg1_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind3 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, Arg1);
public:
    FunctionExtClosure_Arg1_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind4 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1);
public:
    FunctionExtClosure_Arg1_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind5 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1);
public:
    FunctionExtClosure_Arg1_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind6 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1);
public:
    FunctionExtClosure_Arg1_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind7 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1);
public:
    FunctionExtClosure_Arg1_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind8 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1);
public:
    FunctionExtClosure_Arg1_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind9 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1);
public:
    FunctionExtClosure_Arg1_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1
>
class FunctionExtClosure_Arg1_Bind10 : public ExtClosure<R (Arg1)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1);
public:
    FunctionExtClosure_Arg1_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg1_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind0 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind0> self_deleter(this);
        return m_function(arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind1 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(PreArg1, Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind1> self_deleter(this);
        return m_function(m_pa1, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind2 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind3 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind4 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind5 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind6 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind7 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind8 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind9 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2
>
class FunctionExtClosure_Arg2_Bind10 : public ExtClosure<R (Arg1, Arg2)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2);
public:
    FunctionExtClosure_Arg2_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg2_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind0> self_deleter(this);
        return m_function(arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(PreArg1, Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind1> self_deleter(this);
        return m_function(m_pa1, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3
>
class FunctionExtClosure_Arg3_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3);
public:
    FunctionExtClosure_Arg3_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg3_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind0> self_deleter(this);
        return m_function(arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(PreArg1, Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind1> self_deleter(this);
        return m_function(m_pa1, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4
>
class FunctionExtClosure_Arg4_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4);
public:
    FunctionExtClosure_Arg4_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg4_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind0> self_deleter(this);
        return m_function(arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind1> self_deleter(this);
        return m_function(m_pa1, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5
>
class FunctionExtClosure_Arg5_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5);
public:
    FunctionExtClosure_Arg5_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg5_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind0> self_deleter(this);
        return m_function(arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind1> self_deleter(this);
        return m_function(m_pa1, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6
>
class FunctionExtClosure_Arg6_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6);
public:
    FunctionExtClosure_Arg6_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg6_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5, arg6);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind0> self_deleter(this);
        return m_function(arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind1> self_deleter(this);
        return m_function(m_pa1, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7
>
class FunctionExtClosure_Arg7_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7);
public:
    FunctionExtClosure_Arg7_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg7_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind0> self_deleter(this);
        return m_function(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind1> self_deleter(this);
        return m_function(m_pa1, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8
>
class FunctionExtClosure_Arg8_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8);
public:
    FunctionExtClosure_Arg8_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg8_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind0> self_deleter(this);
        return m_function(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind1> self_deleter(this);
        return m_function(m_pa1, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9
>
class FunctionExtClosure_Arg9_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9);
public:
    FunctionExtClosure_Arg9_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg9_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

template <
    bool SelfDeleting,
    typename R,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind0 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind0(FunctionType function):
        m_function(function) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind0> self_deleter(this);
        return m_function(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind1 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind1(FunctionType function, PreArg1 pa1):
        m_function(function), m_pa1(pa1) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind1> self_deleter(this);
        return m_function(m_pa1, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind2 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind2(FunctionType function, PreArg1 pa1, PreArg2 pa2):
        m_function(function), m_pa1(pa1), m_pa2(pa2) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind2> self_deleter(this);
        return m_function(m_pa1, m_pa2, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind3 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind3(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind3> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind4 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind4(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind4> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind5 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind5(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind5> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind6 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind6(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind6> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind7 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind7(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind7> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind8 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind8(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind8> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind9 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind9(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind9> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
};

template <
    bool SelfDeleting,
    typename R,
    typename PreArg1,
    typename PreArg2,
    typename PreArg3,
    typename PreArg4,
    typename PreArg5,
    typename PreArg6,
    typename PreArg7,
    typename PreArg8,
    typename PreArg9,
    typename PreArg10,
    typename Arg1,
    typename Arg2,
    typename Arg3,
    typename Arg4,
    typename Arg5,
    typename Arg6,
    typename Arg7,
    typename Arg8,
    typename Arg9,
    typename Arg10
>
class FunctionExtClosure_Arg10_Bind10 : public ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)> {
    typedef R (*FunctionType)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10);
public:
    FunctionExtClosure_Arg10_Bind10(FunctionType function, PreArg1 pa1, PreArg2 pa2, PreArg3 pa3, PreArg4 pa4, PreArg5 pa5, PreArg6 pa6, PreArg7 pa7, PreArg8 pa8, PreArg9 pa9, PreArg10 pa10):
        m_function(function), m_pa1(pa1), m_pa2(pa2), m_pa3(pa3), m_pa4(pa4), m_pa5(pa5), m_pa6(pa6), m_pa7(pa7), m_pa8(pa8), m_pa9(pa9), m_pa10(pa10) {}
    virtual R Run(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4, Arg5 arg5, Arg6 arg6, Arg7 arg7, Arg8 arg8, Arg9 arg9, Arg10 arg10) {
        ConditionalAutoDeleter<SelfDeleting, FunctionExtClosure_Arg10_Bind10> self_deleter(this);
        return m_function(m_pa1, m_pa2, m_pa3, m_pa4, m_pa5, m_pa6, m_pa7, m_pa8, m_pa9, m_pa10, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    }
    virtual bool IsSelfDelete() const { return SelfDeleting; }
private:
    FunctionType m_function;
    typename ParamTraits<PreArg1>::StorageType m_pa1;
    typename ParamTraits<PreArg2>::StorageType m_pa2;
    typename ParamTraits<PreArg3>::StorageType m_pa3;
    typename ParamTraits<PreArg4>::StorageType m_pa4;
    typename ParamTraits<PreArg5>::StorageType m_pa5;
    typename ParamTraits<PreArg6>::StorageType m_pa6;
    typename ParamTraits<PreArg7>::StorageType m_pa7;
    typename ParamTraits<PreArg8>::StorageType m_pa8;
    typename ParamTraits<PreArg9>::StorageType m_pa9;
    typename ParamTraits<PreArg10>::StorageType m_pa10;
};

////////////////////////////////////////////////////
//////// ExtClosure create helper functions /////////////
////////////////////////////////////////////////////
//////////// for class method ////////////////////////

template <typename R, typename ClassPointer, typename MethodClass>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)()) {
    return new MethodExtClosure_Arg0_Bind0<true, R, ClassPointer, MethodClass>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg0_Bind1<true, R, ClassPointer, MethodClass, PreArg1>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg0_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg0_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg0_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg0_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg0_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg0_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg0_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg0_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10>
ExtClosure<R ()>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg0_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1)) {
    return new MethodExtClosure_Arg1_Bind0<true, R, ClassPointer, MethodClass, Arg1>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg1_Bind1<true, R, ClassPointer, MethodClass, PreArg1, Arg1>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg1_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg1_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg1_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg1_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg1_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg1_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg1_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg1_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg1_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2)) {
    return new MethodExtClosure_Arg2_Bind0<true, R, ClassPointer, MethodClass, Arg1, Arg2>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg2_Bind1<true, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg2_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg2_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg2_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg2_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg2_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg2_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg2_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg2_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg2_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3)) {
    return new MethodExtClosure_Arg3_Bind0<true, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg3_Bind1<true, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg3_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg3_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg3_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg3_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg3_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg3_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg3_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg3_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg3_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4)) {
    return new MethodExtClosure_Arg4_Bind0<true, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg4_Bind1<true, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg4_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg4_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg4_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg4_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg4_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg4_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg4_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg4_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg4_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5)) {
    return new MethodExtClosure_Arg5_Bind0<true, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg5_Bind1<true, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg5_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg5_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg5_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg5_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg5_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg5_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg5_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg5_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg5_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)) {
    return new MethodExtClosure_Arg6_Bind0<true, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg6_Bind1<true, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg6_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg6_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg6_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg6_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg6_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg6_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg6_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg6_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg6_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)) {
    return new MethodExtClosure_Arg7_Bind0<true, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg7_Bind1<true, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg7_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg7_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg7_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg7_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg7_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg7_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg7_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg7_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg7_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)) {
    return new MethodExtClosure_Arg8_Bind0<true, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg8_Bind1<true, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg8_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg8_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg8_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg8_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg8_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg8_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg8_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg8_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg8_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)) {
    return new MethodExtClosure_Arg9_Bind0<true, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg9_Bind1<true, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg9_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg9_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg9_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg9_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg9_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg9_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg9_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg9_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg9_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)) {
    return new MethodExtClosure_Arg10_Bind0<true, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg10_Bind1<true, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg10_Bind2<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg10_Bind3<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg10_Bind4<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg10_Bind5<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg10_Bind6<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg10_Bind7<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg10_Bind8<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg10_Bind9<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg10_Bind10<true, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

////////////////////////////////////////////////////
//////// ExtClosure create helper functions /////////////
////////////////////////////////////////////////////
//////////// for class method ////////////////////////

template <typename R, typename ClassPointer, typename MethodClass>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)()) {
    return new MethodExtClosure_Arg0_Bind0<false, R, ClassPointer, MethodClass>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg0_Bind1<false, R, ClassPointer, MethodClass, PreArg1>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg0_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg0_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg0_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg0_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg0_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg0_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg0_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg0_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10>
ExtClosure<R ()>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg0_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1)) {
    return new MethodExtClosure_Arg1_Bind0<false, R, ClassPointer, MethodClass, Arg1>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg1_Bind1<false, R, ClassPointer, MethodClass, PreArg1, Arg1>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg1_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg1_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg1_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg1_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg1_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg1_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg1_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg1_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg1_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2)) {
    return new MethodExtClosure_Arg2_Bind0<false, R, ClassPointer, MethodClass, Arg1, Arg2>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg2_Bind1<false, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg2_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg2_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg2_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg2_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg2_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg2_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg2_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg2_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg2_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3)) {
    return new MethodExtClosure_Arg3_Bind0<false, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg3_Bind1<false, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg3_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg3_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg3_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg3_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg3_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg3_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg3_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg3_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg3_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4)) {
    return new MethodExtClosure_Arg4_Bind0<false, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg4_Bind1<false, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg4_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg4_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg4_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg4_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg4_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg4_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg4_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg4_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg4_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5)) {
    return new MethodExtClosure_Arg5_Bind0<false, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg5_Bind1<false, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg5_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg5_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg5_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg5_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg5_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg5_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg5_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg5_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg5_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)) {
    return new MethodExtClosure_Arg6_Bind0<false, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg6_Bind1<false, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg6_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg6_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg6_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg6_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg6_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg6_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg6_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg6_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg6_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)) {
    return new MethodExtClosure_Arg7_Bind0<false, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg7_Bind1<false, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg7_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg7_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg7_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg7_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg7_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg7_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg7_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg7_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg7_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)) {
    return new MethodExtClosure_Arg8_Bind0<false, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg8_Bind1<false, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg8_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg8_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg8_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg8_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg8_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg8_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg8_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg8_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg8_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)) {
    return new MethodExtClosure_Arg9_Bind0<false, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg9_Bind1<false, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg9_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg9_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg9_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg9_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg9_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg9_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg9_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg9_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg9_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename ClassPointer, typename MethodClass, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)) {
    return new MethodExtClosure_Arg10_Bind0<false, R, ClassPointer, MethodClass, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new MethodExtClosure_Arg10_Bind1<false, R, ClassPointer, MethodClass, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new MethodExtClosure_Arg10_Bind2<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new MethodExtClosure_Arg10_Bind3<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new MethodExtClosure_Arg10_Bind4<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new MethodExtClosure_Arg10_Bind5<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new MethodExtClosure_Arg10_Bind6<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new MethodExtClosure_Arg10_Bind7<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new MethodExtClosure_Arg10_Bind8<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new MethodExtClosure_Arg10_Bind9<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename ClassPointer, typename MethodClass, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(ClassPointer object, R (MethodClass::*method)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new MethodExtClosure_Arg10_Bind10<false, R, ClassPointer, MethodClass, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(object, method, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

////////////////////////////////////////////////////
//////// ExtClosure create helper functions /////////////
////////////////////////////////////////////////////
//////////// for nomal function ////////////////////////

template <typename R>
ExtClosure<R ()>* NewExtClosure(R (*function)()) {
    return new FunctionExtClosure_Arg0_Bind0<true, R>(function);
}

template <typename R, typename PreArg1>
ExtClosure<R ()>* NewExtClosure(R (*function)(PreArg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg0_Bind1<true, R, PreArg1>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2>
ExtClosure<R ()>* NewExtClosure(R (*function)(PreArg1, PreArg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg0_Bind2<true, R, PreArg1, PreArg2>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3>
ExtClosure<R ()>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg0_Bind3<true, R, PreArg1, PreArg2, PreArg3>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4>
ExtClosure<R ()>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg0_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5>
ExtClosure<R ()>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg0_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6>
ExtClosure<R ()>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg0_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7>
ExtClosure<R ()>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg0_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8>
ExtClosure<R ()>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg0_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9>
ExtClosure<R ()>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg0_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10>
ExtClosure<R ()>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg0_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(Arg1)) {
    return new FunctionExtClosure_Arg1_Bind0<true, R, Arg1>(function);
}

template <typename R, typename PreArg1, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(PreArg1, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg1_Bind1<true, R, PreArg1, Arg1>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(PreArg1, PreArg2, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg1_Bind2<true, R, PreArg1, PreArg2, Arg1>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg1_Bind3<true, R, PreArg1, PreArg2, PreArg3, Arg1>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg1_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg1_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg1_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg1_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg1_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg1_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1>
ExtClosure<R (Arg1)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg1_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(Arg1, Arg2)) {
    return new FunctionExtClosure_Arg2_Bind0<true, R, Arg1, Arg2>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(PreArg1, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg2_Bind1<true, R, PreArg1, Arg1, Arg2>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg2_Bind2<true, R, PreArg1, PreArg2, Arg1, Arg2>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg2_Bind3<true, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg2_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg2_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg2_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg2_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg2_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg2_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg2_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(Arg1, Arg2, Arg3)) {
    return new FunctionExtClosure_Arg3_Bind0<true, R, Arg1, Arg2, Arg3>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg3_Bind1<true, R, PreArg1, Arg1, Arg2, Arg3>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg3_Bind2<true, R, PreArg1, PreArg2, Arg1, Arg2, Arg3>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg3_Bind3<true, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg3_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg3_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg3_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg3_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg3_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg3_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg3_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4)) {
    return new FunctionExtClosure_Arg4_Bind0<true, R, Arg1, Arg2, Arg3, Arg4>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg4_Bind1<true, R, PreArg1, Arg1, Arg2, Arg3, Arg4>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg4_Bind2<true, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg4_Bind3<true, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg4_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg4_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg4_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg4_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg4_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg4_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg4_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5)) {
    return new FunctionExtClosure_Arg5_Bind0<true, R, Arg1, Arg2, Arg3, Arg4, Arg5>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg5_Bind1<true, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg5_Bind2<true, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg5_Bind3<true, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg5_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg5_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg5_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg5_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg5_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg5_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg5_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)) {
    return new FunctionExtClosure_Arg6_Bind0<true, R, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg6_Bind1<true, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg6_Bind2<true, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg6_Bind3<true, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg6_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg6_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg6_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg6_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg6_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg6_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg6_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)) {
    return new FunctionExtClosure_Arg7_Bind0<true, R, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg7_Bind1<true, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg7_Bind2<true, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg7_Bind3<true, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg7_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg7_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg7_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg7_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg7_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg7_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg7_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)) {
    return new FunctionExtClosure_Arg8_Bind0<true, R, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg8_Bind1<true, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg8_Bind2<true, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg8_Bind3<true, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg8_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg8_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg8_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg8_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg8_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg8_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg8_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)) {
    return new FunctionExtClosure_Arg9_Bind0<true, R, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg9_Bind1<true, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg9_Bind2<true, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg9_Bind3<true, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg9_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg9_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg9_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg9_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg9_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg9_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg9_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)) {
    return new FunctionExtClosure_Arg10_Bind0<true, R, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg10_Bind1<true, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg10_Bind2<true, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg10_Bind3<true, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg10_Bind4<true, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg10_Bind5<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg10_Bind6<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg10_Bind7<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg10_Bind8<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg10_Bind9<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg10_Bind10<true, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

////////////////////////////////////////////////////
//////// ExtClosure create helper functions /////////////
////////////////////////////////////////////////////
//////////// for nomal function ////////////////////////

template <typename R>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)()) {
    return new FunctionExtClosure_Arg0_Bind0<false, R>(function);
}

template <typename R, typename PreArg1>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)(PreArg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg0_Bind1<false, R, PreArg1>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg0_Bind2<false, R, PreArg1, PreArg2>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg0_Bind3<false, R, PreArg1, PreArg2, PreArg3>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg0_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg0_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg0_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg0_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg0_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg0_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10>
ExtClosure<R ()>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg0_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(Arg1)) {
    return new FunctionExtClosure_Arg1_Bind0<false, R, Arg1>(function);
}

template <typename R, typename PreArg1, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(PreArg1, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg1_Bind1<false, R, PreArg1, Arg1>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg1_Bind2<false, R, PreArg1, PreArg2, Arg1>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg1_Bind3<false, R, PreArg1, PreArg2, PreArg3, Arg1>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg1_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg1_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg1_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg1_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg1_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg1_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1>
ExtClosure<R (Arg1)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg1_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(Arg1, Arg2)) {
    return new FunctionExtClosure_Arg2_Bind0<false, R, Arg1, Arg2>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(PreArg1, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg2_Bind1<false, R, PreArg1, Arg1, Arg2>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg2_Bind2<false, R, PreArg1, PreArg2, Arg1, Arg2>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg2_Bind3<false, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg2_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg2_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg2_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg2_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg2_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg2_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2>
ExtClosure<R (Arg1, Arg2)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg2_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(Arg1, Arg2, Arg3)) {
    return new FunctionExtClosure_Arg3_Bind0<false, R, Arg1, Arg2, Arg3>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg3_Bind1<false, R, PreArg1, Arg1, Arg2, Arg3>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg3_Bind2<false, R, PreArg1, PreArg2, Arg1, Arg2, Arg3>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg3_Bind3<false, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg3_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg3_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg3_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg3_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg3_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg3_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3>
ExtClosure<R (Arg1, Arg2, Arg3)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg3_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4)) {
    return new FunctionExtClosure_Arg4_Bind0<false, R, Arg1, Arg2, Arg3, Arg4>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg4_Bind1<false, R, PreArg1, Arg1, Arg2, Arg3, Arg4>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg4_Bind2<false, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg4_Bind3<false, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg4_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg4_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg4_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg4_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg4_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg4_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg4_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5)) {
    return new FunctionExtClosure_Arg5_Bind0<false, R, Arg1, Arg2, Arg3, Arg4, Arg5>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg5_Bind1<false, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg5_Bind2<false, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg5_Bind3<false, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg5_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg5_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg5_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg5_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg5_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg5_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg5_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)) {
    return new FunctionExtClosure_Arg6_Bind0<false, R, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg6_Bind1<false, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg6_Bind2<false, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg6_Bind3<false, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg6_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg6_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg6_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg6_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg6_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg6_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg6_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)) {
    return new FunctionExtClosure_Arg7_Bind0<false, R, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg7_Bind1<false, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg7_Bind2<false, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg7_Bind3<false, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg7_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg7_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg7_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg7_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg7_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg7_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg7_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)) {
    return new FunctionExtClosure_Arg8_Bind0<false, R, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg8_Bind1<false, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg8_Bind2<false, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg8_Bind3<false, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg8_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg8_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg8_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg8_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg8_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg8_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg8_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)) {
    return new FunctionExtClosure_Arg9_Bind0<false, R, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg9_Bind1<false, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg9_Bind2<false, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg9_Bind3<false, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg9_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg9_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg9_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg9_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg9_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg9_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg9_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

template <typename R, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)) {
    return new FunctionExtClosure_Arg10_Bind0<false, R, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function);
}

template <typename R, typename PreArg1, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1) {
    return new FunctionExtClosure_Arg10_Bind1<false, R, PreArg1, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1);
}

template <typename R, typename PreArg1, typename PreArg2, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2) {
    return new FunctionExtClosure_Arg10_Bind2<false, R, PreArg1, PreArg2, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3) {
    return new FunctionExtClosure_Arg10_Bind3<false, R, PreArg1, PreArg2, PreArg3, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4) {
    return new FunctionExtClosure_Arg10_Bind4<false, R, PreArg1, PreArg2, PreArg3, PreArg4, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5) {
    return new FunctionExtClosure_Arg10_Bind5<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6) {
    return new FunctionExtClosure_Arg10_Bind6<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5, pa6);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7) {
    return new FunctionExtClosure_Arg10_Bind7<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8) {
    return new FunctionExtClosure_Arg10_Bind8<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9) {
    return new FunctionExtClosure_Arg10_Bind9<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9);
}

template <typename R, typename PreArg1, typename PreArg2, typename PreArg3, typename PreArg4, typename PreArg5, typename PreArg6, typename PreArg7, typename PreArg8, typename PreArg9, typename PreArg10, typename Arg1, typename Arg2, typename Arg3, typename Arg4, typename Arg5, typename Arg6, typename Arg7, typename Arg8, typename Arg9, typename Arg10>
ExtClosure<R (Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)>* NewPermanentExtClosure(R (*function)(PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10)
        , typename ParamTraits<PreArg1>::ForwardType pa1
        , typename ParamTraits<PreArg2>::ForwardType pa2
        , typename ParamTraits<PreArg3>::ForwardType pa3
        , typename ParamTraits<PreArg4>::ForwardType pa4
        , typename ParamTraits<PreArg5>::ForwardType pa5
        , typename ParamTraits<PreArg6>::ForwardType pa6
        , typename ParamTraits<PreArg7>::ForwardType pa7
        , typename ParamTraits<PreArg8>::ForwardType pa8
        , typename ParamTraits<PreArg9>::ForwardType pa9
        , typename ParamTraits<PreArg10>::ForwardType pa10) {
    return new FunctionExtClosure_Arg10_Bind10<false, R, PreArg1, PreArg2, PreArg3, PreArg4, PreArg5, PreArg6, PreArg7, PreArg8, PreArg9, PreArg10, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10>(function, pa1, pa2, pa3, pa4, pa5, pa6, pa7, pa8, pa9, pa10);
}

} // namespace pbrpc

} // namespace sofa

#endif // _SOFA_PBRPC_EXT_CLOSURE_H_
